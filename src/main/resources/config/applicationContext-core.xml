<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/aop 
  		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
  		http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-4.1.xsd
        http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-4.1.xsd
        ">
	<!-- 读取数据库配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<aop:aspectj-autoproxy proxy-target-class="true" /> 
	
	<bean id="sch" class="com.baicai.supple.ScheduleHelp" />
	<task:scheduled-tasks scheduler="myScheduler">
		<task:scheduled ref="sch" method="task2" fixed-delay="1000000" />
		<task:scheduled ref="sch" method="task1" cron="0 0 1 * * *" />
	</task:scheduled-tasks>
	<task:scheduler id="myScheduler" pool-size="2" />

	<bean id="defaultDataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
		<!-- 最大活跃连接，线上服务器需调大 -->
		<property name="maximumPoolSize" value="20" />
		<!-- <property name="testOnBorrow" value="true" /> <property name="validationQuery"
			value="SELECT 1 " /> -->
		<property name="idleTimeout" value="30000" />
	</bean>

	<bean id="DataSource2" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${mysql2.jdbc.url}" />
		<property name="username" value="${mysql2.jdbc.username}" />
		<property name="password" value="${mysql2.jdbc.password}" />
		<!-- 最大活跃连接，线上服务器需调大 -->
		<property name="minimumIdle" value="3" />
		<property name="maximumPoolSize" value="20" />
		<property name="poolName" value="p2p" />
		<property name="idleTimeout" value="30000" />
	</bean>

	<bean id="dynamicDataSource" class="com.baicai.core.database.DynamicDataSource">
		<!-- 通过key-value的形式来关联数据源 -->
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="defaultDataSource" key="defaultDataSource"></entry>
				<entry value-ref="DataSource2" key="DataSource2"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="defaultDataSource" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<bean id="namedParameterJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dynamicDataSource" />
	</bean>

	<context:component-scan base-package="com.baicai.service" />
	<context:component-scan base-package="com.baicai.dao" />
	<context:component-scan base-package="com.baicai.core" />
	<context:component-scan base-package="com.baicai.util" />
	<context:component-scan base-package="com.baicai.supple" />
	<!-- 配置事务管理 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<bean id="beetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration"
		init-method="init">
		<property name="configFileResource" value="classpath:beetl.properties" />
	</bean>

	<bean name="beetlViewResolver" id="viewResolver"
		class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<property name="suffix" value=".htm" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="0" />
		<!-- 多GroupTemplate，需要指定使用的bean -->
		<property name="config" ref="beetlConfig" />
	</bean>

	<import resource="redis-context.xml" />
</beans>